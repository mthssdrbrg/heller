#!/bin/bash

function awaitport() {
  for i in {1..10}; do
    nc -z localhost $1 && return 0
    sleep 1
  done
  echo "Failed to connect to port $1"
  return 1
}

function start() {
  base_dir=$(dirname $0)/..
  log_dir=$base_dir/tmp
  config_dir=$base_dir/spec/support/config
  slf4j_dir=$(find $GEM_HOME -name 'slf4j-jars*' -type d | sort | tail -n 1)
  classpath=$(find $slf4j_dir -name 'slf4j-api-*.jar' | paste -sd: -)
  classpath=$classpath:$(find $slf4j_dir -name 'slf4j-simple-*.jar' | paste -sd: -)
  for gem in scala-library-jars zookeeper-jars metrics-core-jars snappy-jars lz4-jars kafka-clients-jars kafka-jars; do
    gem_dir=$(find $GEM_HOME -name $gem'*' -type d | sort | tail -n 1)
    classpath=$classpath:$(find $gem_dir -name '*.jar' | paste -sd: -)
  done
  kafka_java_opts="-Xmx512M -server -Dlog4j.configuration=file:$config_dir/log4j.properties -cp $classpath"

  mkdir -p $log_dir

  echo "Starting zookeeper"

  java $kafka_java_opts org.apache.zookeeper.server.quorum.QuorumPeerMain $config_dir/zookeeper.properties < /dev/null >> $log_dir/zookeeper_console.log 2>&1 &

  awaitport 2181 || (RETVAL=1 && return)

  echo "Starting kafka"

  java $kafka_java_opts kafka.Kafka $config_dir/server.properties < /dev/null >> $log_dir/kafka_console.log 2>&1 &

  awaitport 9092 || (RETVAL=1 && return)
}

function stop() {
  kill -9 $(jps -m | grep Kafka | cut -d ' ' -f 1) > /dev/null 2>&1
  kill -9 $(jps -m | grep zookeeper | cut -d ' ' -f 1) > /dev/null 2>&1
}

RETVAL=0

case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  *)
    echo "Usage: $NAME {start|stop|restart}" >&2
    RETVAL=3
    ;;
esac

exit $RETVAL
